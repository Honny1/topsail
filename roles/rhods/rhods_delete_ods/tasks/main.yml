---
- name: Ensure that the operator exists
  command:
    oc get deploy/rhods-operator
       -n "{{ rhods_delete_ods_namespace }}"
       --ignore-not-found
  register: has_rhods_operator_cmd

- name: Check if the operator is stopped
  command:
    oc get deploy/rhods-operator
       -n "{{ rhods_delete_ods_namespace }}"
       -ojsonpath={.spec.replicas}
  register: rhods_operator_replicas_cmd
  when: has_rhods_operator_cmd.stdout

- name: Scale up the operator if it was stopped
  command:
    oc scale deploy/rhods-operator
       --replicas=1
       -n "{{ rhods_delete_ods_namespace }}"
  when: has_rhods_operator_cmd.stdout and rhods_operator_replicas_cmd.stdout == "0"

- name: Wait for the operand namespaces to disappear
  include_tasks: delete_ns.yaml
  loop:
  - datasciencepipelinesapplication
  - InferenceServices
  - ServingRuntime
  - ServiceMeshMembers

- name: Ensure that the operator is not running
  command:
    oc scale deploy/rhods-operator
       --replicas=0
       -n "{{ rhods_delete_ods_namespace }}"
  when: has_rhods_operator_cmd.stdout

- name: Wait for the operator pod to disappear
  command:
    oc get pods -lname=rhods-operator
       --no-headers
       -n "{{ rhods_delete_ods_namespace }}"
  register: has_rhods_operator_pod_cmd
  until: not has_rhods_operator_pod_cmd.stdout
  failed_when: has_rhods_operator_pod_cmd.stdout
  retries: 10
  delay: 10

- name: Wait for the operand namespaces to disappear
  include_tasks: delete_ns.yaml
  loop:
  - redhat-ods-applications
  - redhat-ods-monitoring
  - rhods-notebooks

- name: Delete the operator namespace
  command:
    oc delete ns "{{ rhods_delete_ods_namespace }}"
       --ignore-not-found

- name: Delete all the following CRDs {{ item }}
  shell: |
    set -o pipefail;
    CRDs=$(oc get crd -oname | grep {{ item }})
    if [[ "$CRDs" ]]; then
      oc delete $CRDs --ignore-not-found
    fi
  loop:
  - opendatahub.io
  - kubeflow.org

- name: Delete the RHODS ClusterRoleBindings and ClusterRole
  shell: |
    set -o pipefail;
    set -x;

    crb=$(oc get ClusterRoleBinding -oname | grep rhods | tr '\n' ' ' || true)
    if [[ "$crb" ]]; then
      oc delete $crb
    fi

    cr=$(oc get ClusterRoleBinding -oname | grep rhods | tr '\n' ' ' || true)
    if [[ "$cr" ]]; then
      oc delete $cr
    fi
