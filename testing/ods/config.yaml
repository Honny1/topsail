ci_presets:
  # name of the presets to apply, or null if no preset
  name: null
  # list of names of the presets to apply, or a single name, or null if no preset
  names: null

  # run the Locust Notebook scale test
  notebook_locust_scale_test:
    tests.notebooks.users.count: 20
    clusters.create.ocp.control_plane.type: m6i.2xlarge
    clusters.create.ocp.compute.type: m6i.2xlarge
    tests.notebooks.users.sleep_factor: 3.0
    tests.notebooks.flavor_to_run: locust
    tests.notebooks.locust.run_time: 10m
    matbench.config_file: notebook_scale_test_locust.yaml

  # run the DSG Notebook scale test
  notebook_scale_test:
    tests.notebooks.users.count: 300
    clusters.create.ocp.control_plane.type: m6i.2xlarge
    clusters.create.ocp.compute.type: m6i.2xlarge
    tests.notebooks.users.sleep_factor: 3.0
    tests.notebooks.flavor_to_run: ods-ci
    tests.notebooks.ods_ci.test_case: notebook_dsg_test.robot
    tests.notebooks.repeat: 2

  # run the Jupyter Notebook scale test
  jupyter_notebook_scale_test:
    extends: [notebook_scale_test]
    tests.notebooks.ods_ci.test_case: notebook_jupyter_test.robot

  # run the notebook image performance test (dev mode)
  notebook_performance:
    tests.notebooks.flavor_to_run: notebook-performance
    matbench.config_file: single_notebook_perf.yaml
    tests.notebooks.notebook_performance.use_rhods: false
    tests.notebooks.users.count: 1

  # run the notebook image performance test on RHODS (test mode)
  rhods_notebook_performance:
    extends: [notebook_performance]
    tests.notebooks.notebook_performance.use_rhods: true

  plot.notebook_scale_tests_comparison:
    matbench.preset: notebook_scale_tests_comparison

  # cluster creation presets

  single:
    clusters.create.type: single

  keep:
    clusters.create.keep: true

  ocp:
    clusters.create.type: ocp

  osd:
    clusters.create.type: osd
    clusters.sutest.is_managed: true
    clusters.sutest.managed.is_ocm: true
secrets:
  dir:
    name: null
    env_key: PSAP_ODS_SECRET_PATH
  # name of the file containing the properties of LDAP secrets
  s3_ldap_password_file: s3_ldap.passwords
  keep_cluster_password_file: get_cluster.password
  addon_email_file: addon.email
  brew_registry_redhat_io_token_file: brew.registry.redhat.io.token
clusters:
  create:
    type: single # can be: single, ocp, managed
    keep: false
    name_prefix: odsci
    sutest_already_exists:
      hostname: null
      username: null
    ocm:
      version: 4.10.15
      region: us-west-2
      workers:
        type: m5.2xlarge
        count: 2
      compute:
        type: m5.2xlarge
    ocp:
      base_domain: psap.aws.rhperfscale.org
      version: 4.11.13
      region: us-west-2
      control_plane:
        type: m6a.xlarge
      workers:
        type: m6a.xlarge
        count: 2
      compute:
        type: m5a.2xlarge

  cleanup:
    max_age: 4 #hours

  sutest:
    is_metal: false
    is_managed: false
    managed:
      is_rosa: false
      is_ocm: false
      env: staging
      name: null
    compute:
      autoscaling:
        enabled: false
      machineset:
        name: rhods-compute-pods
        count: null
        taint:
          key: only-rhods-compute-pods
          value: "yes"
          effect: NoSchedule

  driver:
    compute:
      machineset:
        name: test-pods
        count: null
        taint:
          key: &driver_toleration_key only-test-pods
          value: "yes"
          effect: NoSchedule

ldap:
  # Name of the LDAP identity provider.
  idp_name: RHODS_CI_LDAP
  users:
    # number of users to create
    count: 1000
    # prefix of the user names of the LDAP provider
    prefix: psapuser

rhods:
  deploy_from_catalog: true
  catalog:
    image: quay.io/modh/qe-catalog-source
    tag: v120-11
  addon:
    # only necessary/set when rhods.deploy_from_catalog is true
    email: SET_AT_RUNTIME
  notebooks:
    customize:
      enabled: true
      pvc_size: 5Gi
      notebook_size:
        enabled: true
        name: &notebook_size_name Tiny
        cpu: 1
        mem_gi: 4
      remove_gpu_images: true
  admin:
    count: 2 # the first N users will be granted these privileges
    roles:
    - view
    - odh-notebook-controller-notebooks-edit
tests:
  notebooks:
    # number of test repetition to perform
    repeat: 1
    users:
      # number of users to simulate
      count: 5
      # offset to add to the Pod user index when computing the user name
      start_offset: 0
      # how long to wait between user starts, multiplied by the user index
      sleep_factor: 5.0
    flavor_to_run: ods-ci # can be: ods-ci, locust or notebook-performance
    # namespace in which the scale test should run
    namespace: notebook-scale-test
    imagestream_name: scale-test
    # Artifacts that should be collected:
    # - 'all': collect all the artifacts generated by ODS-CI.
    # - 'no-screenshot': exclude the screenshots (selenium-screenshot-*.png) from the artifacts collected.
    # - 'no-screenshot-except-zero': exclude the screenshots, except if the job index is zero.
    # - 'no-screenshot-except-failed': exclude the screenshots, except if the test failed.
    # - 'no-screenshot-except-failed-and-zero': exclude the screenshots, except if the test failed or the job index is zero.
    # - 'none': do not collect any ODS-CI artifact.
    artifacts_collected: no-screenshot-except-failed-and-zero
    # Should be true to capture Prometheus databases and properly generate the cluster usage metrics
    # Can be overriden by CI_ARTIFACTS_CAPTURE_PROM_DB
    capture_prom_db: true
    notebook:
      # name of the RHODS notebook size to select when launching the notebook.
      size_name: *notebook_size_name
      # name of the RHODS imagestream to use when launching the notebooks.
      image_name: s2i-generic-data-science-notebook
    ods_ci:
      image:
        repo: https://github.com/openshift-psap/ods-ci.git
        ref: jh-at-scale.v221213
      # tags to exclude when running the robot test case
      excluded_tags: None
      # ODS-CI test case to execute.
      test_case: notebook_dsg_test.robot
    test_pods:
      # must be consistent with roles/rhods_notebook_scale_test/templates/ods-ci_job.yaml
      size:
        cpu: 0.2
        mem_gi: 0.75
      toleration: *driver_toleration_key
    ipynb:
      uploaded_directory: testing/ods/notebooks
      notebook_filename: benchmark_entrypoint.ipynb
    benchmark:
      # name of the benchmark to pass to the notebook
      name: pyperf_bm_go.py
      # number of times the benchmark should be executed within one repeat.
      number: 20
      # number of repeats of the benchmark to perform.
      repeat: 3
    cleanup:
      # if enable, delete the test namespaces after the testing
      cleanup_driver_on_exit: true
      skip_if_le_than_users: 5
    locust:
      # Rate to spawn users at (users per second)
      spawn_rate: 0.5 # not used at the moment (spawn_rate = user_count)
      # Test run time (eg, 300s, 20m, 3h, 1h30m, etc.)
      run_time: 5m # not used at the moment (iteration == user_count)
      # Number of Locust processes to launch (one per Pod with 1cpu)
      cpu_count: 5
    notebook_performance:
      use_rhods: true
      tests:
      - imagestream: s2i-generic-data-science-notebook
        ipynb:
          uploaded_directory: testing/ods/notebooks
          notebook_filename: benchmark_entrypoint.ipynb
        instance_types:
        - m5.xlarge
        - m6a.xlarge
        - m6i.xlarge
        benchmarks:
          # name of the benchmark to pass to the notebook
        - name: pyperf_bm_go.py
          # number of times the benchmark should be executed within one repeat.
          number: 20
          # number of repeats of the benchmark to perform.
          repeat: 5
matbench:
  preset: null
  workload: rhods-notebooks-ux
  config_file: notebook_scale_test_ods_ci.yaml # subprojects/matrix-benchmarking-workloads/rhods-notebooks-ux/data
  download:
    mode: prefer_cache
    url:
    url_file:
    # if true, copy the results downloaded by `matbench download` into the artifacts directory
    save_to_artifacts: false
  ignore_exit_code: true
