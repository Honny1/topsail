---
# Create artifacts directory
- name: Create the artifacts directory
  file:
    path: "{{ artifact_extra_logs_dir }}/artifacts"
    state: directory
    mode: '0755'

# Prepare build context
- name: Prepare
  become: "{{ container_bench_image_build_large_build_context_benchmark_rootfull }}"
  shell: |
    {{ initial_prune_command }}
    mkdir ${HOME}/large-build-context
    cd ${HOME}/large-build-context
    cat <<'EOF' > Dockerfile
    {{ dockerfile_content }}
    EOF
    for i in $(seq 1 10); do
        dd if=/dev/urandom of=random-$i bs=1G count=1
    done
    ls

# Run benchmark commands
- name: Run benchmark commands
  become: "{{ container_bench_image_build_large_build_context_benchmark_rootfull }}"
  shell: |
     {{ container_bench_image_build_large_build_context_benchmark_exec_time_path | dirname }}/.venv/bin/python \
     {{ container_bench_image_build_large_build_context_benchmark_exec_time_path }} \
     --output "{{ artifact_extra_logs_dir }}/artifacts/output.log" \
     --metrics-log-file "{{ artifact_extra_logs_dir }}/artifacts/metrics.json" \
     {{ benchmark_command }}

- name: Clean up
  become: "{{ container_bench_image_build_large_build_context_benchmark_rootfull }}"
  shell: |
    {{ cleanup_commands }}
    rm -rf {{ build_context_path }}
