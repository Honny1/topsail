__platforms: &all_platforms
  - podman/darwin
  - docker/darwin

ci_presets:
  to_apply: []

secrets:
  dir:
    name: crc-container-bench-secret
    env_key: CONTAINER_BENCH_SECRET_PATH
  private_key_path: mac__private_key.mac-m3pro
  hostname: mac__hostname.mac-m3pro
  username: mac__username.mac-m3pro
  base_work_dir: mac__base_work_dir.mac-m3pro
  opensearch_instances: opensearch.yaml

remote_host:
  run_locally: false
  private_key_filename: "@secrets.private_key_path" # in the secret dir
  hostname: "*$@secrets.hostname"
  username: "*$@secrets.username"
  port: 22
  base_work_dir: "*$@secrets.base_work_dir"
  ssh_flags:
    - "-oStrictHostKeyChecking=no"
    - "-oUserKnownHostsFile=/dev/null"
    - "-o LogLevel=ERROR"
    - "-oControlMaster=auto"
    - "-oControlPath=/tmp/ssh-%r@%h:%p"
    - "-oControlPersist=60s"
  system: darwin
  arch: arm64
  python_bin: python3
  podman_bin: podman # only used if not prepare.podman.repo.enabled
  docker:
    # To use Docker, you need to have Docker Desktop installed and running.
    # User must be logged in system to use Docker Desktop.
    enabled: false
    docker_bin: docker
  env:
    PATH: "/opt/homebrew/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/podman/bin"
  home_is_base_work_dir: true
  verbose_ssh_commands: true


prepare:
  # the list of platform environments to prepare

  cleanup_on_exit: false

  brew:
    install_dependencies: false
    dependencies:
      - krunkit

  podman:
    custom_binary:
      enabled: false
      path: "/Users/jrodak/projects/containers/podman/bin/"
      server_file: "podman"
      client_file: "podman-remote-{@remote_host.system}"
    repo:
      enabled: false
      url: https://github.com/containers/podman
      version: v5.4.0
      darwin:
        file: podman-remote-release-{@remote_host.system}_{@remote_host.arch}.zip
        zip: true
    gvisor:
      repo:
        enabled: true
        url: https://github.com/containers/gvisor-tap-vsock/
        version: v0.8.3
        file: "gvproxy-{@remote_host.system}"

    stop_on_exit: true

    machine:
      enabled: true
      force_configuration: false
      set_default: true
      name: podman-machine-default
      use_configuration: true
      configuration:
        cpus: 4 # in cores
        memory: 5120 # in MiB
        rootful: true
      env:
        CONTAINERS_MACHINE_PROVIDER: applehv # libkrun
        CONTAINERS_HELPER_BINARY_DIR: /opt/homebrew/bin/

cleanup:
  files:
    podman: true
    exec_time: true
    venv: true

  podman_machine:
    delete: true

  docker_desktop:
    stop: true

export_artifacts:
  enabled: false

helloworld_benchmark:
  runs: 10
  supported_container_engines:
    - podman
    - docker

exec_benchmark:
  runs: 10
  supported_container_engines:
    - podman
    - docker

image_build_large_build_context_benchmark:
  runs: 5
  supported_container_engines:
    - podman
    - docker

test:
  platform: # *all_platforms
    - podman/darwin
  platforms_to_skip:
    - docker/darwin
  benchmark:
    # - helloworld_benchmark
    # - exec_benchmark
    - image_build_large_build_context_benchmark
  podman:
    machine_provider:
    - libkrun
    - applehv
    rootful:
    - true
    - false
    repo_version:
    - v5.4.0
    # - v5.3.1
    - custom
  capture_metrics:
    enabled: true

  matbenchmarking:
    enabled: false
    stop_on_error: true
    iterable_test_fields:
    - test.platform
    - test.podman.repo_version
    # - test.podman.rootful
    # - test.podman.machine_provider
    map_iterable_test_fields:
      test.platform: test.platform
      test.podman.repo_version: prepare.podman.repo.version
      test.podman.rootful: prepare.podman.machine.configuration.rootful
      test.podman.machine_provider: prepare.podman.machine.env.CONTAINERS_MACHINE_PROVIDER

matbench:
  enabled: true
  workload: projects.container_bench.visualizations.benchmark
  preset: null
  config_file: plots.yaml
  download:
    mode: prefer_cache
    url:
    url_file:
    # if true, copy the results downloaded by `matbench download` into the artifacts directory
    save_to_artifacts: false
  # directory to plot. Set by topsail/testing/visualize.py before launching the visualization
  test_directory: null
